<%- include header %>
<!-- Content Wrapper. Contains page content -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.1/socket.io.js"></script>
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            <%= title %>
        </h1>
    </section>
    <!-- Main content -->
    <section class="content container-fluid">
        <div class="timerIds" style="display: flex; justify-content: space-between;">
            <div style="display: flex;">
                <h3>CountDown : </h3>&nbsp;&nbsp;
                <h3 id="countdown"></h3>
                <!-- <span id="countdown"></span> -->
            </div>
            <div style="display: flex;">
                <h3>Slote No : </h3>&nbsp;&nbsp;
                <h3 id="sloteno"></h3>
                <!-- <span id="countdown"></span> -->
            </div>
            <div style="display: flex;">
                <h3>Total User : </h3>&nbsp;&nbsp;
                <h3 id="totaluser"></h3>
                <!-- <span id="countdown"></span> -->
            </div>
            <div style="display: flex;">
                <h3>Total Bet : </h3>&nbsp;&nbsp;
                <h3 id="totalBet"></h3>
                <!-- <span id="countdown"></span> -->
            </div>
        </div>
        <input type="hidden" value="<%= data.profitPercent%>" id="gamePercent">
        <div class="row">
            <div class="col-md-12">
                <div class="box">
                    <!-- /.box-header -->
                    <div class="box-body table-responsive">
                        <table id="example1" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Bet Card</th>
                                    <th>Number Of User</th>
                                    <th>Bet Amount</th>
                                    <th>Total bet</th>
                                    <th>100% winning</th>
                                    <th>After Dduct winning</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr id="spot-0" class="gradeX">
                                    <td>A</td>
                                    <td><p id="aceUser">0</p></td>
                                    <td><p id="aceBet">0</p></td>
                                    <td><p id="acetotal">0</p></td>
                                    <td><p id="ace">0</p></td>
                                    <td><p id="acePayable">0</p></td>
                                </tr>
                                <tr id="NewXa" class="gradeX">
                                    <td>Contribution Of A</td>
                                    <td><p ></p></td>
                                    <td><p id="contriAmtA">0</p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                </tr>
                                <tr id="spot-1" class="gradeX">
                                    <td>K</td>
                                    <td><p id="KingUser">0</p></td>
                                    <td><p id="KingBet">0</p></td>
                                    <td><p id="kingtotal">0</p></td>
                                    <td><p id="king">0</p></td>
                                    <td><p id="kingPayable">0</p></td>
                                </tr>
                                <tr id="NewXa" class="gradeX">
                                    <td>Contribution Of K</td>
                                    <td><p ></p></td>
                                    <td><p id="contriAmtK">0</p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                </tr>
                                <tr id="spot-2" class="gradeX">
                                    <td>Q</td>
                                    <td><p id="QueenUser">0</p></td>
                                    <td><p id="QueenBet">0</p></td>
                                    <td><p id="queentotal">0</p></td>
                                    <td><p id="queen">0</p></td>
                                    <td><p id="queenPayable">0</p></td>
                                </tr>
                                <tr id="NewXa" class="gradeX">
                                    <td>Contribution Of Q</td>
                                    <td><p ></p></td>
                                    <td><p id="contriAmtQ">0</p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                </tr>
                                <tr id="spot-3" class="gradeX">
                                    <td>J</td>
                                    <td><p id="JakeUser">0</p></td>
                                    <td><p id="JakeBet">0</p></td>
                                    <td><p id="jaketotal">0</p></td>
                                    <td><p id="jake">0</p></td>
                                    <td><p id="jakePayable">0</p></td>
                                </tr>
                                <tr id="NewXa" class="gradeX">
                                    <td>Contribution Of J</td>
                                    <td><p ></p></td>
                                    <td><p id="contriAmtJ">0</p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                </tr>
                                <tr id="spot-4" class="gradeX">
                                    <td>10</td>
                                    <td><p id="10User">0</p></td>
                                    <td><p id="10Bet">0</p></td>
                                    <td><p id="10total">0</p></td>
                                    <td><p id="10Pay">0</p></td>
                                    <td><p id="10Payable">0</p></td>
                                </tr>
                                <tr id="NewXa" class="gradeX">
                                    <td>Contribution Of 10</td>
                                    <td><p ></p></td>
                                    <td><p id="contriAmt10">0</p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                    <td><p ></p></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
<%- include footer %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
<script>
     document.addEventListener("DOMContentLoaded",async function () {
        const socket = io('http://43.205.200.32:3070');
        let gamePercent = document.getElementById("gamePercent").value;
        // console.log(gamePercent);
        socket.emit("livebets", { hii: "hii" });
        // socket.emit("adminspot", { adminspot: 2 });


            socket.on('livebets', function (data) {
    // console.log(data);
         const tableBody = document.querySelector('#example1 tbody');
        const rows = Array.from(tableBody.querySelectorAll('tr'));


        const sortedRows = rows.sort((a, b) => {
            const spotA = a.querySelector('td').textContent;
            const spotB = b.querySelector('td').textContent;
            const sequence = ['A',"Contribution Of A" ,'K', "Contribution Of K",'Q', "Contribution Of Q",'J',"Contribution Of J", '10',"Contribution Of 10"];
            return sequence.indexOf(spotA) - sequence.indexOf(spotB);
        });

        sortedRows.forEach(row => tableBody.appendChild(row));


    const gamePercent = parseFloat(document.getElementById("gamePercent").value);
// console.log(1 + gamePercent / 100);
    let SpotZeroAmt = data.SpotZeroAmt.filter(element => element !== 0);
    let SpotOneAmt = data.SpotOneAmt.filter(element => element !== 0);
    let SpotTwoAmt = data.SpotTwoAmt.filter(element => element !== 0);
    let SpotThreeAmt = data.SpotThreeAmt.filter(element => element !== 0);
    let SpotFourAmt = data.SpotFourAmt.filter(element => element !== 0);

    let totalZero =  SpotZeroAmt.reduce((acc, currentValue) => acc + currentValue, 0)
    let totalOne =  SpotOneAmt.reduce((acc, currentValue) => acc + currentValue, 0)
    let totalTwo =  SpotTwoAmt.reduce((acc, currentValue) => acc + currentValue, 0)
    let totalThree =  SpotThreeAmt.reduce((acc, currentValue) => acc + currentValue, 0)
    let totalFour =  SpotFourAmt.reduce((acc, currentValue) => acc + currentValue, 0)
    let allbettotal = totalZero + totalOne + totalTwo + totalThree + totalFour
    // console.log(SpotZeroAmt,totalZero);

    const calculateContribution = (spotAmt, totalAmt) => {
            return spotAmt.map(element => {
                let percent = (parseFloat(element) / totalAmt) * 100;
                return percent.toFixed(2); // Return percentage contribution
            });
        };

        let contributionA = calculateContribution(SpotZeroAmt, totalZero);
        let contributionK = calculateContribution(SpotOneAmt, totalOne);
        let contributionQ = calculateContribution(SpotTwoAmt, totalTwo);
        let contributionJ = calculateContribution(SpotThreeAmt, totalThree);
        let contribution10 = calculateContribution(SpotFourAmt, totalFour);

        // Update HTML elements with calculated contributions
        document.getElementById('contriAmtA').innerHTML = contributionA.join(' | ');
        document.getElementById('contriAmtK').innerHTML = contributionK.join(' | ');
        document.getElementById('contriAmtQ').innerHTML = contributionQ.join(' | ');
        document.getElementById('contriAmtJ').innerHTML = contributionJ.join(' | ');
        document.getElementById('contriAmt10').innerHTML = contribution10.join(' | ');

    let ace=[] , king= [] , queen= [] , jake= [] , ten = [];
    let Payableamount_0 = SpotZeroAmt.map((element,index) => {
        let percent = ( parseFloat(element)/ totalZero) * 100;
        let win = (allbettotal/100)*percent;
        ace.push(win.toFixed(2))
        let deductpercent = 20;
        let set3= win - (win * deductpercent) / 100;
        // console.log(parseFloat(element) , totalZero ,percent , win,set3,"Payableamount_0")
        return set3.toFixed(2)
    });


    let Payableamount_1 = SpotOneAmt.map(element => {
        let percent = ( parseFloat(element)/ totalOne) * 100;
        let win = (allbettotal/100)*percent;
        king.push(win.toFixed(2))
        let deductpercent = 20;
        let set3= win - (win * deductpercent) / 100;
        // console.log(parseFloat(element) , totalOne ,percent , win,set3,"Payableamount_1")
        return set3.toFixed(2)
    });
    console.log(Payableamount_0,ace,SpotZeroAmt,"Here is data");

    let Payableamount_2 = SpotTwoAmt.map(element => {
        let percent = ( parseFloat(element)/ totalTwo) * 100;
        let win = (allbettotal/100)*percent;
        queen.push(win.toFixed(2))
        let deductpercent = 20;
        let set3= win - (win * deductpercent) / 100;
        // console.log(parseFloat(element) , totalTwo ,percent , win,set3,"Payableamount_2")
        return set3.toFixed(2)
    });

    let Payableamount_3 = SpotThreeAmt.map(element => {
        let percent = ( parseFloat(element)/ totalThree) * 100;
        let win = (allbettotal/100)*percent;
        jake.push(win.toFixed(2))
        let deductpercent = 20;
        let set3= win - (win * deductpercent) / 100;
        // console.log(parseFloat(element) , totalThree ,percent , win,set3 ,"Payableamount_3")
        return set3.toFixed(2)
    });

    let Payableamount_4 = SpotFourAmt.map(element => {
        let percent = ( parseFloat(element)/ totalFour) * 100;
        let win = (allbettotal/100)*percent;
        ten.push(win.toFixed(2))
        let deductpercent = 20.;
        let set3= win - (win * deductpercent) / 100;
        // console.log(parseFloat(element) , totalFour ,percent , win,set3,"Payableamount_4")
        return set3.toFixed(2)
    });


    document.getElementById('aceBet').innerHTML = SpotZeroAmt.length > 0 ? SpotZeroAmt.join(' | ') : 0;
    document.getElementById('aceUser').innerHTML = data.SpotZeroUser;
    document.getElementById('acePayable').innerHTML = Payableamount_0.length > 0 ? Payableamount_0 : 0;
    document.getElementById('acetotal').innerHTML = totalZero;
    document.getElementById('ace').innerHTML = ace.length > 0 ? ace : 0;;
    

    document.getElementById('KingBet').innerHTML = SpotOneAmt.length > 0 ? SpotOneAmt.join(' | ') : 0;
    document.getElementById('KingUser').innerHTML = data.SpotOneUser;
    document.getElementById('kingPayable').innerHTML =Payableamount_1.length > 0 ? Payableamount_1 : 0;
    document.getElementById('kingtotal').innerHTML = totalOne;
    document.getElementById('king').innerHTML = king.length > 0 ? king : 0;;

    document.getElementById('QueenBet').innerHTML = SpotTwoAmt.length > 0 ? SpotTwoAmt.join(' | ') : 0;
    document.getElementById('QueenUser').innerHTML = data.SpotTwoUser;
    document.getElementById('queenPayable').innerHTML = Payableamount_2.length > 0 ? Payableamount_2 : 0;
    document.getElementById('queentotal').innerHTML = totalTwo;
    document.getElementById('queen').innerHTML = queen.length > 0 ? queen : 0;;

    document.getElementById('JakeBet').innerHTML = SpotThreeAmt.length > 0 ? SpotThreeAmt.join(' | ') : 0;
    document.getElementById('JakeUser').innerHTML = data.SpotThreeUser;
    document.getElementById('jakePayable').innerHTML = Payableamount_3.length > 0 ? Payableamount_3 : 0;
    document.getElementById('jaketotal').innerHTML = totalThree;
    document.getElementById('jake').innerHTML = jake.length > 0 ? jake : 0;;

    document.getElementById('10Bet').innerHTML = SpotFourAmt.length > 0 ? SpotFourAmt.join(' | ') : 0;
    document.getElementById('10User').innerHTML = data.SpotFourUser;
    document.getElementById('10Payable').innerHTML = Payableamount_4.length > 0 ? Payableamount_4 : 0;
    document.getElementById('10total').innerHTML = totalFour;
    document.getElementById('10Pay').innerHTML = ten.length > 0 ? ten : 0;;
    
    document.getElementById('totalBet').innerHTML = allbettotal
    

    const slote = document.querySelector('#sloteno');
            slote.textContent  = data.room_id;
            const totaluser = document.querySelector('#totaluser');
            totaluser.textContent  = data.totalplayer;
    console.log('Received response from socket server livebets:', data);
    const timerInSeconds = data.timer; 
    const countdownDisplay = document.querySelector('#countdown');

    startCountdown(timerInSeconds, countdownDisplay , data.room_id , data.totalplayer);
});
document.getElementById('manualCheckbox').addEventListener('change', function() {
        if (this.checked) {
            document.getElementById('automaticCheckbox').checked = false;
        }
    });

    document.getElementById('automaticCheckbox').addEventListener('change', function() {
        if (this.checked) {
            document.getElementById('manualCheckbox').checked = false;
        }
    });
        });

    function updateTable(data) {
        const gamePercent = parseFloat(document.getElementById("gamePercent").value);

        for (let i = 0; i < 5; i++) {
            const spotId = `spot-${i}`;
            const spotData = data[`Spot${i}`];

            document.getElementById(`${spotId}Bet`).innerHTML = spotData.BetAmount;
            document.getElementById(`${spotId}User`).innerHTML = spotData.NumberOfUser;
            document.getElementById(`${spotId}Payable`).innerHTML = parseFloat(spotData.BetAmount) * (1 + gamePercent / 100);
        }
    }

    function startCountdown(durationInSeconds, display , room , user) {
        let timer = durationInSeconds;
        const countdownInterval = setInterval(function () {
            const minutes = Math.floor(timer / 60);
            const seconds = timer % 60;
            const displayMinutes = String(minutes).padStart(2, '0');
            const displaySeconds = String(seconds).padStart(2, '0');
            display.textContent = ' '+ displayMinutes + ': ' + displaySeconds;
            if (timer <= 0) {
                clearInterval(countdownInterval);
            } else {
                timer--;
            }
        }, 1000);
    }
</script>
<script>
    function saveSettings() {
        const checkboxes = document.querySelectorAll('input[type="radio"]:checked');
        const manualCheckbox = document.getElementById('manualCheckbox');
        const automaticCheckbox = document.getElementById('automaticCheckbox');
        let selectedSpot;
        const socket = io('http://43.205.200.32:3070');

        if (manualCheckbox.checked) {
            selectedSpot = Number(checkboxes[0].value);
        } else if (automaticCheckbox.checked) {
            selectedSpot = undefined;
        }

        socket.emit("adminspot", { adminspot: selectedSpot });

        console.log('Selected spot value:', selectedSpot);
    }
</script>
