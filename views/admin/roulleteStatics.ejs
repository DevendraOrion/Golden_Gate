<%- include header %>
<!-- Content Wrapper. Contains page content -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.1/socket.io.js"></script>
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            <%= title %>
        </h1>
    </section>
    <!-- Main content -->
    <section class="content container-fluid">
        <div class="timerIds" style="display: flex; justify-content: space-between;">
            <div>
                <div style="    display: flex;
                justify-content: center;">
                    <h3 style="font-weight: bold; font-size: 13px;">Control Type</h3>
                </div>
                <div style="display: flex;">
                    <h3 style="font-weight: bold; margin-left: 17px;font-size: 13px;">Command Mode</h3>
                    <h3 style="font-weight:  bold; margin-left: 17px; font-size: 13px;">Random Mode</h3>
                    <h3 style="font-weight: bold;margin-left: 17px;font-size: 13px;">Mannual Mode</h3>
                </div>
            </div>
            <div>
                <!-- <h3>CountDown</h3> -->
                <span id="countdown" style="font-size: 18px;">00.00</span>
            </div>
            <div >
                <h3  style="font-size: 13px;   font-weight: bold;">Total User:<span class="zero" id="totalUser">0</span></h3>
                <h3 style="font-size: 13px; font-weight: bold;">Total Bet Amount:<span class="zero" id="totalBet">0</span></h3>
                <h3 style="font-size: 13px; font-weight: bold;">Profit:<span class="zero" id="totalProfit">0</span></h3>
            </div>
        </div>

        <input type="hidden" value="<%= data.profitPercent%> " id="gamePercent">
        <div class="row">
            <div class="col-md-12">
                <div class="box">
                    <h2 style="    display: flex;
                    justify-content: center;
                    font-size: 16px;">Bet Item List</h2>
                    <!-- /.box-header -->
                    <div class="box-body table-responsive">
                        <table class="table table-bordered table-striped">
                            <tbody>
                                <tr>
                                    <th>Item</th>
                                    <td>00</td>
                                    <td>0</td>
                                    <td>1</td>
                                    <td>2</td>
                                    <td>3</td>
                                    <td>4</td>
                                    <td>5</td>
                                    <td>6</td>
                                    <td>7</td>
                                    <td>8</td>
                                    <td>9</td>
                                    <td>10</td>
                                    <td>11</td>
                                    <td>12</td>
                                    <td>13</td>
                                    <td>14</td>
                                    <td>15</td>
                                    <td>16</td>
                                    <td>17</td>
                                    <td>18</td>
                                    <td>19</td>
                                    <td>20</td>
                                    <td>21</td>
                                    <td>22</td>
                                    <td>23</td>
                                    <td>24</td>
                                    <td>25</td>
                                    <td>26</td>
                                    <td>27</td>
                                    <td>28</td>
                                    <td>29</td>
                                    <td>30</td>
                                    <td>31</td>
                                    <td>32</td>
                                    <td>33</td>
                                    <td>34</td>
                                    <td>35</td>
                                    <td>36</td>
                                </tr>
                      
                   
                                <tr>
                                    <th>Bet Amount</th>
                                    <td><p id="00">0</p></td>
                                    <td><p id="0">0</p></td>
                                    <td><p id="1">0</p></td>
                                    <td><p id="2">0</p></td>
                                    <td><p id="3">0</p></td>
                                    <td><p id="4">0</p></td>
                                    <td><p id="5">0</p></td>
                                    <td><p id="6">0</p></td>
                                    <td><p id="7">0</p></td>
                                    <td><p id="8">0</p></td>
                                    <td><p id="9">0</p></td>
                                    <td><p id="10">0</p></td>
                                    <td><p id="11">0</p></td>
                                    <td><p id="12">0</p></td>
                                    <td><p id="13">0</p></td>
                                    <td><p id="14">0</p></td>
                                    <td><p id="15">0</p></td>
                                    <td><p id="16">0</p></td>
                                    <td><p id="17">0</p></td>
                                    <td><p id="18">0</p></td>
                                    <td><p id="19">0</p></td>
                                    <td><p id="20">0</p></td>
                                    <td><p id="21">0</p></td>
                                    <td><p id="22">0</p></td>
                                    <td><p id="23">0</p></td>
                                    <td><p id="24">0</p></td>
                                    <td><p id="25">0</p></td>
                                    <td><p id="26">0</p></td>
                                    <td><p id="27">0</p></td>
                                    <td><p id="28">0</p></td>
                                    <td><p id="29">0</p></td>
                                    <td><p id="30">0</p></td>
                                    <td><p id="31">0</p></td>
                                    <td><p id="32">0</p></td>
                                    <td><p id="33">0</p></td>
                                    <td><p id="34">0</p></td>
                                    <td><p id="35">0</p></td>
                                    <td><p id="36">0</p></td>
                               
                                </tr>
                                <tr>
                                    <th>Profit Amount</th>
                                    <td><p id="return00">0</p></td>
                                    <td><p id="return0">0</p></td>
                                    <td><p id="return1">0</p></td>
                                    <td><p id="return2">0</p></td>
                                    <td><p id="return3">0</p></td>
                                    <td><p id="return4">0</p></td>
                                    <td><p id="return5">0</p></td>
                                    <td><p id="return6">0</p></td>
                                    <td><p id="return7">0</p></td>
                                    <td><p id="return8">0</p></td>
                                    <td><p id="return9">0</p></td>
                                    <td><p id="return10">0</p></td>
                                    <td><p id="return11">0</p></td>
                                    <td><p id="return12">0</p></td>
                                    <td><p id="return13">0</p></td>
                                    <td><p id="return14">0</p></td>
                                    <td><p id="return15">0</p></td>
                                    <td><p id="return16">0</p></td>
                                    <td><p id="return17">0</p></td>
                                    <td><p id="return18">0</p></td>
                                    <td><p id="return19">0</p></td>
                                    <td><p id="return20">0</p></td>
                                    <td><p id="return21">0</p></td>
                                    <td><p id="return22">0</p></td>
                                    <td><p id="return23">0</p></td>
                                    <td><p id="return24">0</p></td>
                                    <td><p id="return25">0</p></td>
                                    <td><p id="return26">0</p></td>
                                    <td><p id="return27">0</p></td>
                                    <td><p id="return28">0</p></td>
                                    <td><p id="return29">0</p></td>
                                    <td><p id="return30">0</p></td>
                                    <td><p id="return31">0</p></td>
                                    <td><p id="return32">0</p></td>
                                    <td><p id="return33">0</p></td>
                                    <td><p id="return34">0</p></td>
                                    <td><p id="return35">0</p></td>
                                    <td><p id="return36">0</p></td>
                                </tr>
                                <tr>
                                    <th>Profit %</th>
                                    <td><p id="percent00">0</p></td>
                                    <td><p id="percent0">0</p></td>
                                    <td><p id="percent1">0</p></td>
                                    <td><p id="percent2">0</p></td>
                                    <td><p id="percent3">0</p></td>
                                    <td><p id="percent4">0</p></td>
                                    <td><p id="percent5">0</p></td>
                                    <td><p id="percent6">0</p></td>
                                    <td><p id="percent7">0</p></td>
                                    <td><p id="percent8">0</p></td>
                                    <td><p id="percent9">0</p></td>
                                    <td><p id="percent10">0</p></td>
                                    <td><p id="percent11">0</p></td>
                                    <td><p id="percent12">0</p></td>
                                    <td><p id="percent13">0</p></td>
                                    <td><p id="percent14">0</p></td>
                                    <td><p id="percent15">0</p></td>
                                    <td><p id="percent16">0</p></td>
                                    <td><p id="percent17">0</p></td>
                                    <td><p id="percent18">0</p></td>
                                    <td><p id="percent19">0</p></td>
                                    <td><p id="percent20">0</p></td>
                                    <td><p id="percent21">0</p></td>
                                    <td><p id="percent22">0</p></td>
                                    <td><p id="percent23">0</p></td>
                                    <td><p id="percent24">0</p></td>
                                    <td><p id="percent25">0</p></td>
                                    <td><p id="percent26">0</p></td>
                                    <td><p id="percent27">0</p></td>
                                    <td><p id="percent28">0</p></td>
                                    <td><p id="percent29">0</p></td>
                                    <td><p id="percent30">0</p></td>
                                    <td><p id="percent31">0</p></td>
                                    <td><p id="percent32">0</p></td>
                                    <td><p id="percent33">0</p></td>
                                    <td><p id="percent34">0</p></td>
                                    <td><p id="percent35">0</p></td>
                                    <td><p id="percent36">0</p></td>
                                </tr>
                             
                            
                            </tbody>
                          
                        </table>
                    </div>
                    <div class="box-body table-responsive">
                        <table class="table table-bordered table-striped">
                            <tbody>
                                <tr>
                                    <th>Bet On</th>
                                    <td>Number(36x)</td>
                                    <td>Number(18x)</td>
                                    <td>Number(12x)</td>
                                    <td>Number(9x)</td>
                                    <td>Number(6x)</td>
                                    <td>Number(3x)</td>
                                    <td>Number(1 to 18) </td>
                                    <td>Number(19 to 36) </td>
                                    <td>Odd Number </td>
                                    <td>Even Number </td>
                                    <td>Red </td>
                                    <td>Black </td>
                                </tr>
                                <tr>
                                    <th>Total Bet</th>
                                    <td><p id="Straight">0</p></td>
                                    <td><p id="Split">0</p></td>
                                    <td><p id="Street">0</p></td>
                                    <td><p id="Corner">0</p></td>
                                    <td><p id="DoubleStreet">0</p></td>
                                    <td><p id="Three">0</p></td>
                                    <td><p id="Low">0 </p></td>
                                    <td><p id="High">0</p></td>
                                    <td><p id="Odd">0</p></td>
                                    <td><p id="Even">0</p></td>
                                    <td><p id="Red">0</p></td>
                                    <td><p id="Black">0</p></td>
                                </tr>
                                <tr>
                                    <th>Profit Amont</th>
                                    <td><p id="profitStraight">0</p></td>
                                    <td><p id="profitSplit">0</p></td>
                                    <td><p id="profitStreet">0</p></td>
                                    <td><p id="profitCorner">0</p></td>
                                    <td><p id="profitDoubleStreet">0</p></td>
                                    <td><p id="profitThree">0</p></td>
                                    <td><p id="profitLow">0 </p></td>
                                    <td><p id="profitHigh">0</p></td>
                                    <td><p id="profitOdd">0</p></td>
                                    <td><p id="profitEven">0</p></td>
                                    <td><p id="profitRed">0</p></td>
                                    <td><p id="profitBlack">0</p></td>
                                 
                                </tr>
                                <tr>
                                    <th>Profit %</th>
                                    <td><p id="profitPercentStraight">0</p></td>
                                    <td><p id="profitPercentSplit">0</p></td>
                                    <td><p id="profitPercentStreet">0</p></td>
                                    <td><p id="profitPercentCorner">0</p></td>
                                    <td><p id="profitPercentDoubleStreet">0</p></td>
                                    <td><p id="profitPercentThree">0</p></td>
                                    <td><p id="profitPercentLow">0 </p></td>
                                    <td><p id="profitPercentHigh">0</p></td>
                                    <td><p id="profitPercentOdd">0</p></td>
                                    <td><p id="profitPercentEven">0</p></td>
                                    <td><p id="profitPercentRed">0</p></td>
                                    <td><p id="profitPercentBlack">0</p></td>
                                
                                </tr>
                            </tbody>
                          
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div>
                    <h2 style="    display: flex;
                    justify-content: center;
                    font-size: 21px;">Current Game User List</h2>
                </div>
                <div class="box">
                    <h2 style="    display: flex;
                    justify-content: center;
                    font-size: 16px;">Bet On</h2>
                    <!-- /.box-header -->
                    <div class="box-body table-responsive">
                        <table class="table table-bordered table-striped" id="userData">
                            <thead>
                                <tr>
                                    <th>S.No</th>
                                    <th>User Id</th>
                                    <td>Number(36x)</td>
                                    <td>Number(18x)</td>
                                    <td>Number(12x)</td>
                                    <td>Number(9x)</td>
                                    <td>Number(6x)</td>
                                    <td>Number(3x)</td>
                                    <td>Number(1 to 18)</td>
                                    <td>Number(19 to 36)</td>
                                    <td>Odd Number</td>
                                    <td>Even Number</td>
                                    <td>Red</td>
                                    <td>Black</td>
                                    <td>Total Bet</td>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                          
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
<%- include footer %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
<script>
const socket = io('http://103.175.163.97:3070');
let gamePercent=document.getElementById('gamePercent').value;
const rouletteRate = {
    Straight: 36,
    Split: 18,
    Street: 12,
    Corner: 9,
    DoubleStreet: 6,
    Basket: 3,
    FiveBet: 3,
    Column: 3,
    FirstRow: 3,
    SecondRow: 3,
    ThirdRow: 3,
    FirstDozen: 3,
    SecondDozen: 3,
    ThirdDozen: 3,
    Low: 2,
    High: 2,
    Odd: 2,
    Even: 2,
    Red: 2,
    Black: 2,
};
socket.emit('sendtimeAdmin', {  msg:"hi" });

socket.on('sendtimeAdmin', function (data) {
    console.log(data,"kjshfdkash");

});
socket.on('OnChipMoveRoullate', function (data) {
    console.log(data);
    let totalChips = 0;
    let uniqueUsers = new Set();
    let userTotalBet = {};    
    let userStraightSpot = {};
    let userSplitSpot = {};   
    let userStreetSpot = {};   
    let userDoubleStreetSpot = {};  
    let userCornerSpot = {};  
    let userThreeSpot = {};   
    let userLowSpot = {};     
    let userHighSpot = {};    
    let userOddSpot = {};     
    let userEvenSpot = {};    
    let userRedSpot = {};     
    let userBlackSpot = {};  

    let typeData = {};
    let chipValues = {};
    let returnAmount = {};
    let profitPercent = {};

    if (Object.keys(data.bets).length === 0) {
        document.querySelectorAll('p').forEach(p => {
            p.innerText = '0';
        });
        document.querySelectorAll('zero').forEach(p => {
            p.innerText = '0';
        });
        
        startCountdown(59, document.getElementById('countdown')); 
    } else {
        Object.values(data.bets).forEach(bet => {
            bet.forEach(b => {
                totalChips += b.chip;
                uniqueUsers.add(b.playerId); 
                
                userTotalBet[b.playerId] = (userTotalBet[b.playerId] || 0) + b.chip;

                typeData[b.type]=(typeData[b.type] || 0) + 1;
                if (rouletteRate[b.type] == 3) {
                console.log("===============");
                      let realThreeSpot=parseInt(b.spot)-1;
                    userThreeSpot[b.playerId] = (userThreeSpot[b.playerId] || '') + b.spot + ',';
            }
                switch (b.type) {
                    case 'Straight':
                        let realStraightSpot=parseInt(b.spot)-1;
                        userStraightSpot[b.playerId] = (userStraightSpot[b.playerId] || '') + realStraightSpot + ',';
                        break;
                    case 'Split':
                        let realSplitSpot=parseInt(b.spot)-1;
                        userSplitSpot[b.playerId] = (userSplitSpot[b.playerId] || '') + b.spot + ',';
                        break;
                    case 'Corner':
                        let realCornerSpot=parseInt(b.spot)-1;
                        userCornerSpot[b.playerId] = (userCornerSpot[b.playerId] || '') + b.spot + ',';
                        break;

                    case 'Street':
                        // let userStreetSpot=parseInt(b.spot)-1;
                        console.log("dsafdf",b.spot);
                        userStreetSpot[b.playerId] = (userStreetSpot[b.playerId] || '') + b.spot + ',';
                        break;
                    case 'DoubleStreet':
                        // let userDoubleStreetSpot=parseInt(b.spot)-1;
                        userDoubleStreetSpot[b.playerId] = (userDoubleStreetSpot[b.playerId] || '') + b.spot + ',';
                        break;

                    case 'Low':
                        let realLowSpot=parseInt(b.spot)-1;
                        userLowSpot[b.playerId] = (userLowSpot[b.playerId] || '') + b.spot + ',';
                        break;
                    case 'High':
                        let realHighSpot=parseInt(b.spot)-1;
                        userHighSpot[b.playerId] = (userHighSpot[b.playerId] || '') + b.spot + ',';
                        break;
                    case 'Odd':
                        let realOddSpot=parseInt(b.spot)-1;
                        userOddSpot[b.playerId] = (userOddSpot[b.playerId] || '') + b.spot + ',';
                        break;
                    case 'Even':
                        let realEvenSpot=parseInt(b.spot)-1;
                        userEvenSpot[b.playerId] = (userEvenSpot[b.playerId] || '') + b.spot + ',';
                        break;
                    case 'Red':
                        userRedSpot[b.playerId] = (userRedSpot[b.playerId] || '') + b.spot + ',';
                        break;
                    case 'Black':
                        let realBlackSpot=parseInt(b.spot)-1;
                        userBlackSpot[b.playerId] = (userBlackSpot[b.playerId] || '') + b.spot + ',';
                        break;
                }

                let spots = Array.isArray(b.spot) ? b.spot : b.spot.split(',').filter(spot => spot !== '');
                spots.forEach(spot => {
                    spot = spot - 1; 
                    chipValues[spot] = (chipValues[spot] || 0) + b.chip;
                    const rate = gamePercent/100; 
                    returnAmount[spot] = (returnAmount[spot] || 0) + (b.chip * rate);
                    profitPercent[spot] = (returnAmount[spot] || 0) + (b.chip * rate);
                });
            });
        });

        // Update the table with user data
        updateUserTable();

        // Function to update the table with user data
        function updateUserTable() {
            const userDataContainer = document.querySelector('#userData tbody');
            userDataContainer.innerHTML = ''; // Clear existing data
            let count = 0;
            let name;
            uniqueUsers.forEach(userId => {
                count++;
                fetch(`/get_id?userId=${userId}`, { // Corrected the URL interpolation
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
                })
                .then(response => response.json())
                .then(response => {
                    console.log(response);
                    name=response.name
                // const title = response.status == 1 ? "Success" : "Error";
                })
                .catch((error) => {
                console.log(error);
                });

                const userData = `
                    <tr>
                        <td><p>${count}</p></td>
                        <td><p>${userId}</p></td>
                        <td><p>${userStraightSpot[userId] || '0'}</p></td>
                        <td><p>${userSplitSpot[userId] || '0'}</p></td>
                        <td><p>${userStreetSpot[userId] || '0'}</p></td>
                        <td><p>${userCornerSpot[userId] || '0'}</p></td>
                        <td><p>${userDoubleStreetSpot[userId] || '0'}</p></td>
                        <td><p>${userThreeSpot[userId] || '0'}</p></td>
                        <td><p>${userLowSpot[userId] || '0'}</p></td>
                        <td><p>${userHighSpot[userId] || '0'}</p></td>
                        <td><p>${userOddSpot[userId] || '0'}</p></td>
                        <td><p>${userEvenSpot[userId] || '0'}</p></td>
                        <td><p>${userRedSpot[userId] || '0'}</p></td>
                        <td><p>${userBlackSpot[userId] || '0'}</p></td>
                        <td><p>${userTotalBet[userId] || '0'}</p></td>
                    </tr>
                `;
                userDataContainer.insertAdjacentHTML('beforeend', userData);
            });
        }
    }
    function updatePlayerSpot(elementId, spotData) {
            const playerId = document.getElementById('userId').innerText;
            const spotElement = document.getElementById(elementId);
            if (playerId && spotData[playerId] && spotElement) {
                spotElement.innerText = spotData[playerId];
            } else {
                spotElement.innerText = '0';
            }
        }


        let three = 0;
        Object.keys(typeData).forEach(spot => {
            const id = "profit" + spot;
            const percentId = "profitPercent" + spot;
            const rate = gamePercent / 100;
            const betAmount = typeData[spot];
            const returnAmount = typeData[spot] * rate;
            if (rouletteRate[spot] == 3) {
                console.log("===============");
                three += betAmount;
                const element = document.getElementById("Three").innerText = three;
                const datas = document.getElementById("profitThree").innerText = three * rate;
                const profitThreePercient = document.getElementById("profitPercentThree").innerText = gamePercent + "%";
            }
            const element = document.getElementById(spot);
            if (element) {
                element.innerText = typeData[spot];
            }

            const profitElement = document.getElementById(id);
            if (profitElement) {
                profitElement.innerText = (typeData[spot] * rate);
            }

            const percentElement = document.getElementById(percentId);
            if (percentElement) {
                percentElement.innerText = `${(returnAmount / betAmount) * 100}%`;
            }
        });

        Object.keys(chipValues).forEach(spot => {
            const returnId = "return" + (parseInt(spot) );
            const percentData = "percent" + (parseInt(spot) );
            document.getElementById(spot).innerText = chipValues[spot];
            document.getElementById(returnId).innerText = returnAmount[spot];
            document.getElementById(percentData).innerText =`${(returnAmount[spot]/chipValues[spot])*100}%`;
        });
    document.getElementById("totalUser").innerHTML = uniqueUsers.size;
    document.getElementById("totalBet").innerHTML = totalChips;
    document.getElementById("totalProfit").innerHTML = totalChips*gamePercent/100;
});

function startCountdown(durationInSeconds, display) {
    let timer = durationInSeconds;

    const countdownInterval = setInterval(function () {
        const minutes = Math.floor(timer / 60);
        const seconds = timer % 60;

        const displayMinutes = String(minutes).padStart(2, '0');
        const displaySeconds = String(seconds).padStart(2, '0');

        display.textContent = displayMinutes + ':' + displaySeconds;

        if (timer <= 0) {
            clearInterval(countdownInterval);
        } else {
            timer--;
        }
    }, 1000);
}

</script>

